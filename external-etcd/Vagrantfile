Vagrant.configure("2") do |config|

    # Load Balancer Nodes
    LoadBalancerCount = 1
    (1..LoadBalancerCount).each do |i|
        config.vm.define "lb-#{i}" do |lb|
            config.vm.box = "gusztavvargadr/ubuntu-server-2404-lts"
            lb.vm.hostname = "lb-#{i}"
            lb.vm.network "private_network", ip: "192.168.56.1#{i}"

            lb.vm.provider "virtualbox" do |vb|
                vb.name = "loadbalancer-#{i}"
                vb.memory = 1024
                vb.cpus = 1
            end
        end
    end

    # ECTD Nodes
    ECTDCount = 3
    (1..ECTDCount).each do |i|
        config.vm.define "etcd-#{i}" do |master|
            config.vm.box = "gusztavvargadr/ubuntu-server-2404-lts"
            master.vm.hostname = "etcd-#{i}"
            master.vm.network "private_network", ip: "192.168.56.2#{i}"

            master.vm.provider "virtualbox" do |vb|
                vb.name = "etcd-#{i}"
                vb.memory = 2048
                vb.cpus = 2
            end
        end
    end

    # Master Nodes
    MasterCount = 2
    (1..MasterCount).each do |i|
        config.vm.define "master-#{i}" do |master|
            config.vm.box = "gusztavvargadr/ubuntu-server-2404-lts"
            master.vm.hostname = "master-#{i}"
            master.vm.network "private_network", ip: "192.168.56.3#{i}"
  
            master.vm.provider "virtualbox" do |vb|
                vb.name = "master-#{i}"
                vb.memory = 4048
                vb.cpus = 2
            end
        end
    end
  
    # Worker Nodes
    WorkerCount = 3
    (1..WorkerCount).each do |i|
        config.vm.define "worker-#{i}" do |worker|
            worker.vm.box = "gusztavvargadr/ubuntu-server-2404-lts"
            worker.vm.hostname = "worker-#{i}"
            worker.vm.network "private_network", ip: "192.168.56.5#{i}"
  
            worker.vm.provider "virtualbox" do |vb|
                vb.name = "worker-#{i}"
                vb.memory = 2048
                vb.cpus = 2
            end
        end
    end
  
    config.vm.provision "shell" do |s|
        ssh_pub_key = File.readlines("#{Dir.home}/.ssh/id_rsa.pub").first.strip
        s.inline = <<-SHELL
            useradd -s /bin/bash -d /home/ubuntu/ -m -G sudo ubuntu
            echo 'ubuntu ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers
            mkdir -p /home/ubuntu/.ssh && chown -R ubuntu /home/ubuntu/.ssh
            echo #{ssh_pub_key} >> /home/ubuntu/.ssh/authorized_keys
        SHELL
    end
  
  end